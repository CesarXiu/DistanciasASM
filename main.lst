     1                                 %line 1+1 main.asm
     2                                 [section .data]
     3                                 
     4                                 
     5                                  EXIT_SUCCESS equ 0
     6                                  SYS_exit equ 60
     7                                 
     8                                  LF equ 10
     9                                  NULL equ 0
    10                                  TRUE equ 1
    11                                  FALSE equ 0
    12                                 
    13                                  STDIN equ 0
    14                                  STDOUT equ 1
    15                                  STDERR equ 2
    16                                 
    17                                  SYS_read equ 0
    18                                  SYS_write equ 1
    19                                  SYS_open equ 2
    20                                  SYS_close equ 3
    21                                  SYS_fork equ 57
    22                                  SYS_creat equ 85
    23                                  SYS_time equ 201
    24                                 
    25                                  O_CREAT equ 0x40
    26                                  O_TRUNC equ 0x200
    27                                  O_APPEND equ 0x400
    28                                 
    29                                  O_RONLY equ 000000
    30                                  O_WRONLY equ 000001
    31                                  O_RDWR equ 000002
    32                                 
    33                                  S_IRUSR equ 00400
    34                                  S_IWUSR equ 00200
    35                                  S_IXUSR equ 00100
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                  BUFF_SIZE equ 255
    42 00000000 0A00                    newline db LF,NULL
    43 00000002 0A50726F6772616D20-     header db LF,"Program to file READ example."
    44 00000002 746F2066696C652052-
    45 00000002 454144206578616D70-
    46 00000002 6C652E             
    47 00000020 0A0A00                  db LF,LF,NULL
    48                                 
    49 00000023 6D617472697A2E7478-     filename db "matriz.txt",NULL
    50 00000023 7400               
    51                                 
    52 0000002E 0000000000000000        fileDesc dq 0
    53 00000036 0000000000000000        matriz db 0,0,0,0,0,0,0,0
    54 0000003E 0000000000000000        charRead dq 0
    55 00000046 4572726F72206F7065-     errMsgOpen db "Error opening file",LF,NULL
    56 00000046 6E696E672066696C65-
    57 00000046 0A00               
    58 0000005A 4572726F7220726561-     errMSgWrite db "Error reading from file",LF,NULL
    59 0000005A 64696E672066726F6D-
    60 0000005A 2066696C650A00     
    61 00000073 536920736520416272-     exito db "Si se Abrio el archivo",LF,LF,NULL
    62 00000073 696F20656C20617263-
    63 00000073 6869766F0A0A00     
    64 0000008C 20456C20636F6E7465-     paso db " El contenido del archivo es: ",LF,LF,NULL
    65 0000008C 6E69646F2064656C20-
    66 0000008C 6172636869766F2065-
    67 0000008C 733A200A0A00       
    68 000000AD 0A2043455252414E44-     closef db LF," CERRANDO EL ARCHIVO ",LF,LF,NULL
    69 000000AD 4F20454C2041524348-
    70 000000AD 49564F200A0A00     
    71                                 
    72                                 
    73                                 
    74                                 
    75                                 [section .bss]
    76 00000000 <gap>                   readBuffer resb BUFF_SIZE
    77                                 
    78                                 
    79                                 [section .text]
    80                                 [global _start]
    81                                  _start:
    82                                 
    83                                 
    84 00000000 48C7C7[00000000]        mov rdi, header
    85 00000007 E8E6000000              call printString
    86                                 
    87                                 
    88                                 
    89                                 
    90                                 
    91                                 
    92                                 
    93                                 
    94                                 
    95                                  openInputFile:
    96 0000000C 48C7C002000000          mov rax,SYS_open
    97 00000013 48C7C7[00000000]        mov rdi,filename
    98 0000001A 48C7C600000000          mov rsi, O_RONLY
    99 00000021 0F05                    syscall
   100                                 
   101 00000023 4883F800                cmp rax,0
   102 00000027 0F8C98000000            jl errorOpen
   103                                 
   104 0000002D 48890425[00000000]      mov qword[fileDesc],rax
   105                                 
   106 00000035 48C7C7[00000000]        mov rdi, exito
   107 0000003C E8B1000000              call printString
   108                                 
   109                                 
   110                                 
   111                                 
   112                                 
   113                                 
   114                                 
   115                                 
   116                                 
   117                                 
   118                                 
   119                                 
   120 00000041 48C7C000000000          mov rax, SYS_read
   121 00000048 488B3C25[00000000]      mov rdi, qword[fileDesc]
   122 00000050 48C7C6[00000000]        mov rsi, readBuffer
   123 00000057 48C7C2FF000000          mov rdx, BUFF_SIZE
   124 0000005E 0F05                    syscall
   125                                 
   126 00000060 4883F800                cmp rax,0
   127 00000064 7C71                    jl errorOnRead
   128                                 
   129                                 
   130                                 
   131 00000066 48890425[00000000]      mov qword[charRead], rax
   132 0000006E 48C7C7[00000000]        mov rdi, paso
   133 00000075 E878000000              call printString
   134                                 
   135                                 
   136 0000007A 48C7C6[00000000]        mov rsi,readBuffer
   137 00000081 C6040600                mov byte[rsi+rax], NULL
   138                                 
   139 00000085 48C7C7[00000000]        mov rdi, readBuffer
   140 0000008C 48C7C6[00000000]        mov rsi, matriz
   141 00000093 488B1425[00000000]      mov rdx, qword[charRead]
   142 0000009B E885000000              call generarMatriz
   143                                  bpoint:
   144 000000A0 48C7C7[00000000]        mov rdi, readBuffer
   145 000000A7 E846000000              call printString
   146                                 
   147                                 
   148                                 
   149                                 
   150 000000AC 48C7C7[00000000]        mov rdi, closef
   151 000000B3 E83A000000              call printString
   152                                 
   153                                 
   154 000000B8 48C7C003000000          mov rax, SYS_close
   155 000000BF 488B3C25[00000000]      mov rdi, qword[fileDesc]
   156 000000C7 0F05                    syscall
   157 000000C9 EB1A                    jmp last
   158                                 
   159                                 
   160                                  errorOpen:
   161 000000CB 48C7C7[00000000]        mov rdi, errMsgOpen
   162 000000D2 E81B000000              call printString
   163 000000D7 EB0C                    jmp last
   164                                 
   165                                  errorOnRead:
   166 000000D9 48C7C7[00000000]        mov rdi,errMSgWrite
   167 000000E0 E80D000000              call printString
   168 000000E5 EBFE                    jmp last
   169                                 
   170                                 
   171                                  last:
   172 000000E7 48C7C03C000000          mov rax, SYS_exit
   173 000000EE 48C7C700000000          mov rdi, EXIT_SUCCESS
   174 000000F5 0F05                    syscall
   175                                 
   176                                 
   177                                 
   178                                 
   179                                 [global printString]
   180                                 printString:
   181                                 
   182 000000F7 53                      push rbx
   183                                 
   184                                 
   185 000000F8 4889FB                  mov rbx, rdi
   186 000000FB 48C7C200000000          mov rdx, 0
   187                                  countStrLoop:
   188 00000102 803B00                  cmp byte[rbx],NULL
   189 00000105 7406                    je countStrDone
   190 00000107 48FFC2                  inc rdx
   191 0000010A 48FFC3                  inc rbx
   192 0000010D EBF1                    jmp countStrLoop
   193                                 
   194                                  countStrDone:
   195 0000010F 4883FA00                cmp rdx,0
   196 00000113 7411                    je prtDone
   197                                 
   198                                 
   199 00000115 48C7C001000000          mov rax, SYS_write
   200 0000011C 4889FE                  mov rsi,rdi
   201 0000011F 48C7C701000000          mov rdi,STDOUT
   202                                 
   203 00000126 0F05                    syscall
   204                                 
   205                                 
   206                                 
   207                                  prtDone:
   208 00000128 5B                      pop rbx
   209 00000129 C3                      ret
   210                                 
   211                                 
   212                                 
   213                                 
   214                                 [global generarMatriz]
   215                                 generarMatriz:
   216                                 
   217                                 
   218                                 
   219 0000012A 53                      push rbx
   220 0000012B 48C7C000000000          mov rax, 0
   221 00000132 4889FB                  mov rbx, rdi
   222 00000135 48C7C1FFFFFFFF          mov rcx, -1
   223 0000013C 49C7C400000000          mov r12, 0
   224                                  numerico:
   225 00000143 48FFC1                  inc rcx
   226                                  byteLeido:
   227 00000146 4939D4                  cmp r12, rdx
   228 00000149 741A                    je funcDone
   229 0000014B 42803C2300              cmp byte[rbx+r12*1],0
   230 00000150 74EF                    je numerico
   231 00000152 428A0423                mov al, byte[rbx+r12*1]
   232 00000156 2C30                    sub al, '0'
   233 00000158 0004CE                  add byte[rsi+rcx*8], al
   234 0000015B 48C7C000000000          mov rax, 0
   235 00000162 49FFC4                  inc r12
   236 00000165 EBDD                    jmp byteLeido
   237                                 
   238                                 
   239                                  funcDone:
   240 00000167 5B                      pop rbx
   241 00000168 C3                      ret
   242                                 
