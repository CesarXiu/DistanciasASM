     1                                 %line 1+1 main.asm
     2                                 [section .data]
     3                                 
     4                                 
     5                                  EXIT_SUCCESS equ 0
     6                                  SYS_exit equ 60
     7                                 
     8                                  LF equ 10
     9                                  NULL equ 0
    10                                  TRUE equ 1
    11                                  FALSE equ 0
    12                                 
    13                                  STDIN equ 0
    14                                  STDOUT equ 1
    15                                  STDERR equ 2
    16                                 
    17                                  SYS_read equ 0
    18                                  SYS_write equ 1
    19                                  SYS_open equ 2
    20                                  SYS_close equ 3
    21                                  SYS_fork equ 57
    22                                  SYS_creat equ 85
    23                                  SYS_time equ 201
    24                                 
    25                                  O_CREAT equ 0x40
    26                                  O_TRUNC equ 0x200
    27                                  O_APPEND equ 0x400
    28                                 
    29                                  O_RONLY equ 000000
    30                                  O_WRONLY equ 000001
    31                                  O_RDWR equ 000002
    32                                 
    33                                  S_IRUSR equ 00400
    34                                  S_IWUSR equ 00200
    35                                  S_IXUSR equ 00100
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                  BUFF_SIZE equ 255
    42 00000000 0A00                    newline db LF,NULL
    43 00000002 0A50726F6772616D20-     header db LF,"Program to file READ example."
    44 00000002 746F2066696C652052-
    45 00000002 454144206578616D70-
    46 00000002 6C652E             
    47 00000020 0A0A00                  db LF,LF,NULL
    48                                 
    49 00000023 6D617472697A2E7478-     filename db "matriz.txt",NULL
    50 00000023 7400               
    51                                 
    52 0000002E 0000000000000000        fileDesc dq 0
    53 00000036 0000000000000000        matriz db 0,0,0,0,0,0,0,0
    54 0000003E 03                      tamanio db 3
    55 0000003F 0000000000000000        charRead dq 0
    56 00000047 4572726F72206F7065-     errMsgOpen db "Error opening file",LF,NULL
    57 00000047 6E696E672066696C65-
    58 00000047 0A00               
    59 0000005B 4572726F7220726561-     errMSgWrite db "Error reading from file",LF,NULL
    60 0000005B 64696E672066726F6D-
    61 0000005B 2066696C650A00     
    62 00000074 536920736520416272-     exito db "Si se Abrio el archivo",LF,LF,NULL
    63 00000074 696F20656C20617263-
    64 00000074 6869766F0A0A00     
    65 0000008D 20456C20636F6E7465-     paso db " El contenido del archivo es: ",LF,LF,NULL
    66 0000008D 6E69646F2064656C20-
    67 0000008D 6172636869766F2065-
    68 0000008D 733A200A0A00       
    69 000000AE 0A2043455252414E44-     closef db LF," CERRANDO EL ARCHIVO ",LF,LF,NULL
    70 000000AE 4F20454C2041524348-
    71 000000AE 49564F200A0A00     
    72                                 
    73                                 
    74                                 
    75                                 
    76                                 [section .bss]
    77 00000000 <gap>                   readBuffer resb BUFF_SIZE
    78                                 
    79                                 
    80                                 [section .text]
    81                                 [global _start]
    82                                  _start:
    83                                 
    84                                 
    85 00000000 48C7C7[00000000]        mov rdi, header
    86 00000007 E8EC000000              call printString
    87                                 
    88                                 
    89                                 
    90                                 
    91                                 
    92                                 
    93                                 
    94                                 
    95                                 
    96                                  openInputFile:
    97 0000000C 48C7C002000000          mov rax,SYS_open
    98 00000013 48C7C7[00000000]        mov rdi,filename
    99 0000001A 48C7C600000000          mov rsi, O_RONLY
   100 00000021 0F05                    syscall
   101                                 
   102 00000023 4883F800                cmp rax,0
   103 00000027 0F8C9E000000            jl errorOpen
   104                                 
   105 0000002D 48890425[00000000]      mov qword[fileDesc],rax
   106                                 
   107 00000035 48C7C7[00000000]        mov rdi, exito
   108 0000003C E8B7000000              call printString
   109                                 
   110                                 
   111                                 
   112                                 
   113                                 
   114                                 
   115                                 
   116                                 
   117                                 
   118                                 
   119                                 
   120                                 
   121 00000041 48C7C000000000          mov rax, SYS_read
   122 00000048 488B3C25[00000000]      mov rdi, qword[fileDesc]
   123 00000050 48C7C6[00000000]        mov rsi, readBuffer
   124 00000057 48C7C2FF000000          mov rdx, BUFF_SIZE
   125 0000005E 0F05                    syscall
   126                                 
   127 00000060 4883F800                cmp rax,0
   128 00000064 7C77                    jl errorOnRead
   129                                 
   130                                 
   131                                 
   132 00000066 48890425[00000000]      mov qword[charRead], rax
   133 0000006E 48C7C7[00000000]        mov rdi, paso
   134 00000075 E87E000000              call printString
   135                                 
   136                                 
   137 0000007A 48C7C6[00000000]        mov rsi,readBuffer
   138 00000081 C6040600                mov byte[rsi+rax], NULL
   139                                 
   140 00000085 48C7C7[00000000]        mov rdi, readBuffer
   141 0000008C 48C7C6[00000000]        mov rsi, matriz
   142 00000093 48C7C200000000          mov rdx, 0
   143 0000009A 8A1425[00000000]        mov dl, byte[tamanio]
   144 000000A1 E8(F6FFFFFF)            call generarMatriz
   145                                  bpoint:
   146 000000A6 48C7C7[00000000]        mov rdi, readBuffer
   147 000000AD E846000000              call printString
   148                                 
   149                                 
   150                                 
   151                                 
   152 000000B2 48C7C7[00000000]        mov rdi, closef
   153 000000B9 E83A000000              call printString
   154                                 
   155                                 
   156 000000BE 48C7C003000000          mov rax, SYS_close
   157 000000C5 488B3C25[00000000]      mov rdi, qword[fileDesc]
   158 000000CD 0F05                    syscall
   159 000000CF EB1A                    jmp last
   160                                 
   161                                 
   162                                  errorOpen:
   163 000000D1 48C7C7[00000000]        mov rdi, errMsgOpen
   164 000000D8 E81B000000              call printString
   165 000000DD EB0C                    jmp last
   166                                 
   167                                  errorOnRead:
   168 000000DF 48C7C7[00000000]        mov rdi,errMSgWrite
   169 000000E6 E80D000000              call printString
   170 000000EB EBFE                    jmp last
   171                                 
   172                                 
   173                                  last:
   174 000000ED 48C7C03C000000          mov rax, SYS_exit
   175 000000F4 48C7C700000000          mov rdi, EXIT_SUCCESS
   176 000000FB 0F05                    syscall
   177                                 
   178                                 
   179                                 
   180                                 
   181                                 [global printString]
   182                                 printString:
   183                                 
   184 000000FD 53                      push rbx
   185                                 
   186                                 
   187 000000FE 4889FB                  mov rbx, rdi
   188 00000101 48C7C200000000          mov rdx, 0
   189                                  countStrLoop:
   190 00000108 803B00                  cmp byte[rbx],NULL
   191 0000010B 7406                    je countStrDone
   192 0000010D 48FFC2                  inc rdx
   193 00000110 48FFC3                  inc rbx
   194 00000113 EBF1                    jmp countStrLoop
   195                                 
   196                                  countStrDone:
   197 00000115 4883FA00                cmp rdx,0
   198 00000119 7411                    je prtDone
   199                                 
   200                                 
   201 0000011B 48C7C001000000          mov rax, SYS_write
   202 00000122 4889FE                  mov rsi,rdi
   203 00000125 48C7C701000000          mov rdi,STDOUT
   204                                 
   205 0000012C 0F05                    syscall
   206                                 
   207                                 
   208                                 
   209                                  prtDone:
   210 0000012E 5B                      pop rbx
   211 0000012F C3                      ret
   212                                 
   213                                 
   214                                 
   215                                 
   216                                 [section .data]
   217 000000C7 FF                      n db -1
   218 000000C8 00                      m db 0
   219 000000C9 00                      k db 0
   220 000000CA 000000                  element db 0,0,0
   221                                 [global generarMatriz]
   222                                  generarMatriz:
   223                                 
   224                                 
   225                                 
   226                                 
   227 000000CD 53                      push rbx
   228 000000CE 4154                    push r12
   229 000000D0 4155                    push r13
   230 000000D2 4156                    push r14
   231                                 
   232 000000D4 48C7C000000000          mov rax, 0
   233 000000DB 4889FB                  mov rbx, rdi
   234 000000DE 89D0                    mov eax, edx
   235 000000E0 F7E2                    mul edx
   236 000000E2 4889C1                  mov rcx, rax
   237 000000E5 48C7C000000000          mov rax, 0
   238 000000EC 48C7C200000000          mov rdx, 0
   239 000000F3 49C7C4FFFFFFFF          mov r12, -1
   240                                  elementos:
   241 000000FA C60425[00000000]FF      mov byte[m], -1
   242 00000102 FE0425[00000000]        inc byte[n]
   243                                  cadena:
   244 00000109 49FFC4                  inc r12
   245 0000010C 428A04E3                mov al, byte[rbx+r12*8]
   246 00000110 3C00                    cmp al, 0
   247 00000112 741A                    je calculoCadena
   248 00000114 2C30                    sub al, '0'
   249 00000116 FE0425[00000000]        inc byte[m]
   250 0000011D 49C7C5[00000000]        mov r13, m
   251 00000124 428804ED[00000000]      mov byte[element+r13*8], al
   252 0000012C EBD9                    jmp cadena
   253                                  prev:
   254 0000012E EBC8                    jmp elementos
   255                                  calculoCadena:
   256 00000130 803C25[00000000]00      cmp byte[m], 0
   257 00000138 7462                    je fin
   258                                  sumaElementos:
   259 0000013A FE0425[00000000]        inc byte[k]
   260 00000141 8A0425[00000000]        mov al, byte[m]
   261 00000148 B30A                    mov bl, 10
   262                                 
   263                                  power_loop:
   264 0000014A FEC8                    dec al
   265 0000014C 3C00                    cmp al, 0
   266 0000014E 7402                    je done
   267 00000150 F6E3                    mul bl
   268 00000152 EBF4                    jmp power_loop
   269                                  done:
   270 00000154 49C7C5[00000000]        mov r13, k
   271 0000015B 88C2                    mov dl, al
   272 0000015D 428A04ED[00000000]      mov al, byte[element+r13*8]
   273 00000165 F6E2                    mul dl
   274 00000167 428804ED[00000000]      mov byte[element+r13*8], al
   275 0000016F FE0C25[00000000]        dec byte[m]
   276 00000176 803C25[00000000]FF      cmp byte[m], -1
   277 0000017E 7CB8                    jl sumaElementos
   278 00000180 8A0425[00000000]        mov al, byte[element]
   279 00000187 020425[08000000]        add al, byte[element+8]
   280 0000018E 020425[10000000]        add al, byte[element+16]
   281 00000195 EB05                    jmp fin
   282                                  ElementoUnico:
   283 00000197 8A0425[00000000]        mov al, byte[element]
   284                                  fin:
   285 0000019E 49C7C5[00000000]        mov r13, n
   286 000001A5 428804EE                mov byte[rsi+r13*8], al
   287 000001A9 E281                    loop prev
   288                                 
   289                                 
   290                                  funcDone:
   291 000001AB 415D                    pop r13
   292 000001AD 415C                    pop r12
   293 000001AF 5B                      pop rbx
   294 000001B0 C3                      ret
   295                                 
